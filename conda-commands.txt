# CREATING ENV

[*] using name:
	[*] conda create --name <env-name>
	[*] conda create -n <env-name>

[*] using path:
	[*] conda create --prefix <custom-path/env>
	[*] go to custom path then conda create --prefix ./env
	[*] conda create -p <custom-path/env>
	[*] go to custom path then conda create -p ./env

# REMOVING ENV

[*] using name:
	[*] conda env remove --name <env-name>
	[*] conda env remove -n <env-name>

[*] using path:
	[*] conda env remove --prefix <custom-path/env>
	[*] go to custom path then conda remove env --prefix ./env
	[*] conda env remove -p <custom-path/env>
	[*] go to custom path then conda remove env -p ./env

# EXPORTING YAML FILE

[*] using name:
	[*] conda env export --name <env-name> > environment.yaml
	[*] conda env export -n <env-name> > environment.yaml

[*] using path:
	[*] conda env export --prefix <custom-path/env> > environment.yaml
	[*] conda env export -p <custom-path/env> > environment.yaml

# we export yaml file to replicate same project env in another machine

# CREATE ENV USING EXPORTED YAML FILE

[*] default:
	[*] conda env create -f environment.yaml
	[*] creates env with name mentioned in top of the yaml file.

[*] using name:
	[*] conda env create --name <env-name> -f environment.yaml
	[*] conda env create -n <env-name> -f environment.yaml

[*] using path:
	[*] conda env create --prefix <custom-path/env> -f environment.yaml
	[*] conda env create -p <custom-path.env> -f environment.yaml

# ACTIVATING & DEACTIVATING ENVIRONMENTS

[*] Activate an environment by name:
	[*] conda activate <env-name>

[*] Activate an environment by path:
	[*] conda activate /path/to/custom/env

[*] Deactivate the current environment:
	[*] conda deactivate

# LISTING AVAILABLE ENVIRONMENTS

[*] List all Conda environments:
	[*] conda env list
	[*] conda info --envs

# VIEWING INSTALLED PACKAGES IN AN ENVIRONMENT

[*] List all packages in a specific environment by name:
	[*] conda list -n <env-name>

[*] List all packages in an environment using path:
	[*] conda list -p /path/to/custom/env

[*] List all installed Conda and pip packages:
	[*] conda list

[*] Check if a specific package is installed:
	[*] conda list | grep <package-name>

# INSTALLING & UPDATING PACKAGES

[*] Install a package into a specific environment by name:
	[*] conda install -n <env-name> <package-name>

[*] Install a package into a specific environment using path:
	[*] conda install -p /path/to/custom/env <package-name>

[*] Install a package from a specific Conda channel:
	[*] conda install -c conda-forge <package-name>

[*] Install multiple packages at once:
	[*] conda install -n <env-name> numpy pandas matplotlib

[*] Update a package in a specific environment:
	[*] conda update -n <env-name> <package-name>

[*] Update all packages in an environment:
	[*] conda update --all -n <env-name>

[*] Check if updates are available for a package:
	[*] conda search <package-name>

# UNINSTALLING PACKAGES

[*] Remove a package from a specific environment by name:
	[*] conda remove -n <env-name> <package-name>

[*] Remove a package from a specific environment by path:
	[*] conda remove -p /path/to/custom/env <package-name>

[*] Remove multiple packages at once:
	[*] conda remove -n <env-name> numpy pandas

# CLONING AN EXISTING ENVIRONMENT

[*] Clone an environment by name:
	[*] conda create --name <new-env-name> --clone <existing-env-name>

[*] Clone an environment to a custom path:
	[*] conda create --prefix /path/to/custom/env --clone <existing-env-name>

# CLEANING UP CONDA (FREE UP SPACE)

[*] Remove unused package caches:
	[*] conda clean --all

[*] Remove unused packages:
	[*] conda clean --packages

[*] Remove old package tarballs:
	[*] conda clean --tarballs

[*] Remove old logs and temporary files:
	[*] conda clean --tempfiles

# CHECKING CONDA CONFIGURATION & INFO

[*] Check Conda version:
	[*] conda --version

[*] Check Conda configuration settings:
	[*] conda config --show

[*] Check detailed Conda info:
	[*] conda info

[*] Check environment-specific information:
	[*] conda info -n <env-name>
